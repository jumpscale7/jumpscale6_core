#!/usr/bin/env python
from JumpScale import j
from JumpScale.baselib import cmdutils

import sys,time

j.application.start("jsgrid")

parser = cmdutils.ArgumentParser()
parser.add_argument("action", choices=['reinit','reconfigure','testall'], help='Command to perform')
# parser.add_argument("-n", '--nr', help='desktop nr')
# parser.add_argument("-d", '--desktop', action='store_true', help='opendesktop')
# parser.add_argument('--passwd', help='password for desktop')

parser.add_argument('--force',required=False, action='store_true',help='dont ask yes, do immediate')
parser.add_argument('--debug',required=False, action='store_true',help='will stop on errors and show all relevant info')


opts = parser.parse_args()

############RECONFIGURE
if opts.action =='reconfigure':
    packages=["grid_master","grid_node","osis","logger","agentcontroller","agent"]
    for package in packages:
        jp=j.packages.findNewest(name=package)
        jp.configure()

    packages=["osis","logger","agentcontroller","agent"]
    for package in packages:
        jp=j.packages.findNewest(name=package)        
        jp.restart()

    j.tools.startupmanager.startAll()

############PS
if opts.action =='reinit':
    
    if opts.force<>None:
        j.system.process.executeWithoutPipe("osis deleteall")
    else:
        j.system.process.executeWithoutPipe("osis deleteall --force=1")

    

    packages=["grid_master","grid_node","osis","logger","agentcontroller","agent"]
    for package in packages:
        jp=j.packages.findNewest(name=package)
        if jp.isInstalled():
            jp.configure()

# packages=["osis","logger"]
#     for package in packages:
#         jp=j.packages.findNewest(name=package)        
#         jp.restart()

    j.tools.startupmanager.startAll()


j.application.stop()
